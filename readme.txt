学习资料来自链接https://blog.csdn.net/github_36111469/article/details/53313959

这里对Ajax的过程和里面的主要点进行了学习。

1 XMLHttpRequest对象少有的几个方法和属性
	1)open():建立到服务器的新请求。并不是打开一个请求。
		具有五个参数：
		request-type:发送请求的类型。典型的值是GET或POST，但也可以发送HEAD请求
		url:要连接的URL
		asynch:如果希望使用异步连接则为true，使用同步连接则为法false。该参数是可选的，默认为true
		username:如果需要身份验证，则可以在此指定用户名。该可选参数没有默认值
		password:如果需要身份验证，则可以在此指定口令。该可选参数没有默认值
	2)send():向服务器发送请求。send()本身可以用来发送数据，但往往只在需要发送安全信息或XML时才考虑使用send()发送内容，平时一般直接通过UPL本身发送数据。如果不需要通过send()传递数据，则只要传递null作为该方法的参数即可
	3)abort():退出当前请求
	4)readyState:提供当前HTML的就绪状态。一共连续5种状态，不同浏览器提供的状态可能不一致。5种状态分别是：
		0：请求未初始化（还没有调用 open()）。
		1：请求已经建立，但是还没有发送（还没有调用 send()）。
		2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。
		3：请求在处理中；通常响应中已有部分数据可用了，但是服务器还没有完成响应的生成。
		4：响应已完成；您可以获取并使用服务器的响应了
	5)responseText:服务器返回的请求响应文本，即服务器返回的数据。我们可以通过访问这个属性处理它。这个属性在不同的就绪状态下往往不一样，而且往往在就绪状态为3的情况下，已经有了值，但只有状态为4时数据才可以安全使用。
	6)onreadystatechange:将这个属性设置为要运行的函数名。这样，当HTTP就绪状态改变时(也就是当readyState改变时)就会自动调用该函数。但对于Ajax编程而言，需要直接处理的状态就是就绪状态4，所以，在这个函数中，需要
		a.检查就绪状态(readyState)。
这个函数往往面对着另一个问题，如果服务器响应请求并完成了处理但是报告了一个错误怎么办？所以，我们还要检查HTTP状态，即
		b.检查HTTP状态码(status)。常见状态代码：
			401：未经授权
			403：禁止
			404：没找到
			200：一切良好



2 Ajax的一般流程
	2.1 以支持多种浏览器的方式创建XMLHttpRequest对象，以保证无论运行什么样的浏览器，xmlHttp都能引用一个有效的XMLHttpRequest对象
		2.1.1.建立一个变量xmlHttp来引用即将创建的XMLHttpRequest对象。
		2.1.2.尝试在Microsoft浏览器（ie浏览器）中创建该对象
			1）尝试使用Msxml2.XMLHTTP对象创建它
			2）如果失败，再尝试Microsoft.XMLHTTP对象。
		2.1.3.如果仍然没有建立xmlHttp,则以非Microsoft的方式创建该对象
	 
	2.2 第2步：
	使用XMLHttpRequest对象发出Ajax请求：
		2.2.1.构造一个能够调用JavaScript方法的页面。js和Ajax在HTML页面之间承担着不可或缺的责任，无法使用js的页面将无法完成Ajax请求。
		2.2.2.发送Ajax请求
			2.2.2.1 从web表单中获取需要的数据
			2.2.2.2 建立需连接的URL
			2.2.2.3 打开到服务器的连接.打开连接要要指定连接方法和要连接的URL。最后一个参数指定连接的类型，如果为true，则将请求一个异步连接
			2.2.2.4 设置服务器相应后要运行的函数。处理服务器回应的函数中应有：
				2.2.2.4.1 检查xmlHttp.readyState的值是否为4，是的话就代表处于就绪状态（这里简略化了，只是处理了一种状态，事实上还有很多其他的状态的）
				2.2.2.4.2 检查xmlHttp.status的值是否为200，是的话代表网页状态一切良好
				2.2.2.4.3 使用xmlHttp.responseText属性获得服务器的响应。因为服务器会把响应填充到xmlHttp.responseText属性中
			2.2.2.5 发送请求
			
			
重点：有关某些调试和对异常状态更好的处理参考 01.html
